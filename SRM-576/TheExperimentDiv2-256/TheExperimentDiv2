#include <algorithm>
#include <iostream>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define eps (le-7)
#define INF (le60)
#define MAX (1<<30)
#define MIN (-MAX)
#define LL long long

#define pb push_back

#define FOR(i,s,e) for (int i = int(s); i != int(e); i++)
#define FORIT(i,c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define ISEQ(c) (c).begin(), (c).end()
#define gcd(a,b) __gcd(a,b)
#define EQ(a,b) (abs(a-b) <eps)
#define sqr(a) ((a)*(a))
#define popcount(n) __builtin_popcount(n)

inline LL strtoint(const string &s) {stringstream ss;ss<<s;LL ret;ss>>ret;return ret;}
inline string inttostr(const LL &a) {stringstream ss;ss<<a;string ret;ss>>ret;return ret;}

class TheExperimentDiv2 {

	public: vector<int> determineHumidity(vector<int> intensity, int L, vector<int> leftEnd) {
		bool check[51]={0};
		int size = intensity.size();
		int sz = leftEnd.size();
		vector<int> v;
		for(int i=0;i<size;i++)
		{
			int counter = 0;
			for(int j=leftEnd[i];j<leftEnd[i]+L;j++)
			{
				if(j<size && !check[j])
				{
					check[j] = true;
					counter+=intensity[j];

				}
			}
			v.push_back(counter);
		}
		vector<int> ans(v.begin(),v.begin()+sz);
		return ans;
	}

};