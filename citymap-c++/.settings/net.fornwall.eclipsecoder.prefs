eclipse.preferences.version=1
problemStatement=CityMap.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_06" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>CityMap</string>\n  </void>\n  <void property\="contestName">\n   <string>Single Round Match 574 - 250 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;CityMap&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;Manao arrived to a city he&apos;s never been to. He bought a city map that depicts the city as a grid H squares high and W squares wide. Each square in this grid can either contain a street segment or a single point of interest of some type.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nIt was later when Manao noticed that the map lacked a legend. The map legend is the list of all types of points of interest (further referred to as POIs) present on the map. Each POI type is coupled with the corresponding symbol denoting this type on the map. For example, you might have seen an &apos;M&apos; sign denoting a metro station or a fork-and-spoon sign denoting a restaurant on a city map.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nFortunately, not all is lost\: the map contains a legend summary. The summary states how many POIs of each type are there on the map (for example, it could say\: all in all, there are 9 restaurants and 4 metro stations on the map). Moreover, it turned out that all quantities are pairwise distinct. Manao realized that he could guess the signs using this information (for instance, if there were 4 triangle signs on the map Manao would know that triangle stands for a metro station).\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nYou are given a vector &amp;lt;string&amp;gt; &lt;b&gt;cityMap&lt;/b&gt; containing H elements, each of them W characters long. Each character of &lt;b&gt;cityMap&lt;/b&gt; designates the corresponding square on Manao&apos;s city map and is &apos;.&apos; if there is a street segment in that square or an uppercase letter if the square contains a POI. Different types of POIs are denoted by different letters, two POIs of the same type are always denoted with the same letter. As you see, the letters just stand for the different signs on the map.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nYou are also given a vector &amp;lt;int&amp;gt; &lt;b&gt;POIs&lt;/b&gt;. &lt;b&gt;POIs&lt;/b&gt;[i] is the number of occurences of the i-th type POIs on the map. It is guaranteed that the information given is consistent, i.e. there are exactly as many different letters in &lt;b&gt;cityMap&lt;/b&gt; as elements in &lt;b&gt;POIs&lt;/b&gt; and there exists a valid assignment of letters to POI types.\n&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\nFor each POI type, determine the letter with which it is denoted on the map. Return a string of as many characters as elements in &lt;b&gt;POIs&lt;/b&gt;, where the character at the i-th position is the letter corresponding to the i-th POI type.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;CityMap&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;getLegend&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;vector &amp;lt;string&amp;gt;, vector &amp;lt;int&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;string getLegend(vector &amp;lt;string&amp;gt; cityMap, vector &amp;lt;int&amp;gt; POIs)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;cityMap&lt;/b&gt; will contain between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cityMap&lt;/b&gt; will be between 1 and 50 characters long, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The elements of &lt;b&gt;cityMap&lt;/b&gt; will be of the same length.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Elements of &lt;b&gt;cityMap&lt;/b&gt; will consist of &apos;.&apos; and &apos;A&apos;-&apos;Z&apos; characters only.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;POIs&lt;/b&gt; will contain between 1 and 26 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;POIs&lt;/b&gt; will be between 1 and 2500, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;All elements of &lt;b&gt;POIs&lt;/b&gt; will be distinct.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;There will exist a valid assignment of letters in &lt;b&gt;cityMap&lt;/b&gt; to POI types.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;M....M&amp;quot;,\n &amp;quot;...R.M&amp;quot;,\n &amp;quot;R..R.R&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{3, 4}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;MR&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The city map is 3 squares high and 6 squares wide. There are 3 &apos;M&apos; signs and 4 &apos;R&apos; signs on the map. The legend summary states that there are three POIs of type 0 and four POIs of type 1 on the map. Obviously, the former are denoted with &apos;M&apos; on the map and the latter are denoted with &apos;R&apos;.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;XXXXXXXZXYYY&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1, 8, 3}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;ZXY&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There is a single &apos;Z&apos; on the map, thus the legend should state that POIs of type 0 are denoted with &apos;Z&apos;. There are three &apos;Y&apos;s on the map, therefore POIs of type 2 are surely denoted with &apos;Y&apos;. Finally, it&apos;s now obvious that &apos;X&apos;s stand for the POIs of type 1.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;...........&amp;quot;,\n &amp;quot;...........&amp;quot;,\n &amp;quot;...........&amp;quot;,\n &amp;quot;..........T&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;T&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The poor city has only one point of interest in the farmost corner.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;AIAAARRI.......GOAI.&amp;quot;,\n &amp;quot;.O..AIIGI.OAAAGI.A.I&amp;quot;,\n &amp;quot;.A.IAAAARI..AI.AAGR.&amp;quot;,\n &amp;quot;....IAI..AOIGA.GAIA.&amp;quot;,\n &amp;quot;I.AIIIAG...GAR.IIAGA&amp;quot;,\n &amp;quot;IA.AOA....I....I.GAA&amp;quot;,\n &amp;quot;IOIGRAAAO.AI.AA.RAAA&amp;quot;,\n &amp;quot;AI.AAA.AIR.AGRIAAG..&amp;quot;,\n &amp;quot;AAAAIAAAI...AAG.RGRA&amp;quot;,\n &amp;quot;.J.IA...G.A.AA.II.AA&amp;quot;}\n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{16,7,1,35,11,66}\n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;GOJIRA&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>getLegend</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>cityMap</string>\n   </void>\n   <void method\="add">\n    <string>POIs</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.String</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase0"/>\n          <string>MR</string>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>M....M</string>\n          </void>\n          <void index\="1">\n           <string>...R.M</string>\n          </void>\n          <void index\="2">\n           <string>R..R.R</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="2">\n          <void index\="0">\n           <int>3</int>\n          </void>\n          <void index\="1">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase1"/>\n          <string>ZXY</string>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="1">\n          <void index\="0">\n           <string>XXXXXXXZXYYY</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="3">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>8</int>\n          </void>\n          <void index\="2">\n           <int>3</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase2"/>\n          <string>T</string>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="4">\n          <void index\="0">\n           <string>...........</string>\n          </void>\n          <void index\="1">\n           <string>...........</string>\n          </void>\n          <void index\="2">\n           <string>...........</string>\n          </void>\n          <void index\="3">\n           <string>..........T</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="1">\n          <void index\="0">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3">\n        <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n         <string>returnValue</string>\n         <void method\="set">\n          <object idref\="ProblemStatement$TestCase3"/>\n          <string>GOJIRA</string>\n         </void>\n        </void>\n       </object>\n       <array class\="java.lang.Object" length\="2">\n        <void index\="0">\n         <array class\="java.lang.String" length\="10">\n          <void index\="0">\n           <string>AIAAARRI.......GOAI.</string>\n          </void>\n          <void index\="1">\n           <string>.O..AIIGI.OAAAGI.A.I</string>\n          </void>\n          <void index\="2">\n           <string>.A.IAAAARI..AI.AAGR.</string>\n          </void>\n          <void index\="3">\n           <string>....IAI..AOIGA.GAIA.</string>\n          </void>\n          <void index\="4">\n           <string>I.AIIIAG...GAR.IIAGA</string>\n          </void>\n          <void index\="5">\n           <string>IA.AOA....I....I.GAA</string>\n          </void>\n          <void index\="6">\n           <string>IOIGRAAAO.AI.AA.RAAA</string>\n          </void>\n          <void index\="7">\n           <string>AI.AAA.AIR.AGRIAAG..</string>\n          </void>\n          <void index\="8">\n           <string>AAAAIAAAI...AAG.RGRA</string>\n          </void>\n          <void index\="9">\n           <string>.J.IA...G.A.AA.II.AA</string>\n          </void>\n         </array>\n        </void>\n        <void index\="1">\n         <array class\="java.lang.Integer" length\="6">\n          <void index\="0">\n           <int>16</int>\n          </void>\n          <void index\="1">\n           <int>7</int>\n          </void>\n          <void index\="2">\n           <int>1</int>\n          </void>\n          <void index\="3">\n           <int>35</int>\n          </void>\n          <void index\="4">\n           <int>11</int>\n          </void>\n          <void index\="5">\n           <int>66</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
